{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/glicemap/glicemap-front/src/views/dashboard/Notifications/index.js\";\nimport React, { Component } from \"react\";\nimport $ from \"jquery\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  container: {\n    position: \"relative\"\n  },\n  refresh: {\n    cursor: \"pointer\",\n    width: \"75px\"\n  }\n};\n\nclass KKTable extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = () => {\n      var selectAll = !this.state.selectAll;\n      this.setState({\n        selectAll: selectAll\n      });\n      var checkedCopy = [];\n      this.state.data.forEach(function (e, index) {\n        checkedCopy.push(selectAll);\n      });\n      this.setState({\n        checked: checkedCopy\n      });\n    };\n\n    this.handleSingleCheckboxChange = index => {\n      console.log(index);\n      var checkedCopy = this.state.checked;\n      checkedCopy[index] = !this.state.checked[index];\n\n      if (checkedCopy[index] === false) {\n        this.setState({\n          selectAll: false\n        });\n      }\n\n      this.setState({\n        checked: checkedCopy\n      });\n    };\n\n    this.state = {\n      loading: true,\n      timestamp: \"\",\n      selectAll: false,\n      data: [],\n      checked: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSingleCheckboxChange = this.handleSingleCheckboxChange.bind(this);\n  }\n\n  componentDidMount() {\n    const data2 = [{\n      one: \"hi0\",\n      two: \"two0\",\n      three: \"three0\"\n    }, {\n      one: \"hi1\",\n      two: \"two1\",\n      three: \"three1\"\n    }, {\n      one: \"hi2\",\n      two: \"two2\",\n      three: \"three2\"\n    }, {\n      one: \"hi3\",\n      two: \"two3\",\n      three: \"three3\"\n    }, {\n      one: \"hi4\",\n      two: \"two4\",\n      three: \"three4\"\n    }, {\n      one: \"hi5\",\n      two: \"two5\",\n      three: \"three5\"\n    }, {\n      one: \"hi6\",\n      two: \"two6\",\n      three: \"three6\"\n    }, {\n      one: \"hi7\",\n      two: \"two7\",\n      three: \"three7\"\n    }, {\n      one: \"hi8\",\n      two: \"two8\",\n      three: \"three8\"\n    }];\n    var checkedCopy = [];\n    var selectAll = this.state.selectAll;\n    data2.forEach(function (e, index) {\n      checkedCopy.push(selectAll);\n    });\n    this.setState({\n      data: data2,\n      checked: checkedCopy,\n      selectAll: selectAll\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(ReactTable, {\n          data: this.state.data,\n          filterable: true,\n          defaultFilterMethod: (filter, row) => row[filter.id] !== undefined ? String(row[filter.id]).toLowerCase().includes(filter.value.toLowerCase()) : false,\n          columns: [{\n            Header: \"One\",\n            accessor: \"one\"\n          }, {\n            Header: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: this.handleChange,\n              checked: this.state.selectAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this),\n            Cell: row => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              defaultChecked: this.state.checked[row.index],\n              checked: this.state.checked[row.index],\n              onChange: () => this.handleSingleCheckboxChange(row.index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this),\n            sortable: false,\n            filterable: false\n          }, {\n            Header: \"Two\",\n            accessor: \"two\"\n          }, {\n            Header: \"Three\",\n            accessor: \"three\"\n          }],\n          className: \"-striped \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default KKTable;","map":{"version":3,"sources":["/home/gustavo/glicemap/glicemap-front/src/views/dashboard/Notifications/index.js"],"names":["React","Component","$","ReactTable","style","container","position","refresh","cursor","width","KKTable","constructor","handleChange","selectAll","state","setState","checkedCopy","data","forEach","e","index","push","checked","handleSingleCheckboxChange","console","log","loading","timestamp","bind","componentDidMount","data2","one","two","three","render","filter","row","id","undefined","String","toLowerCase","includes","value","Header","accessor","Cell","sortable","filterable"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nconst style = {\r\n  container: {\r\n    position: \"relative\"\r\n  },\r\n\r\n  refresh: {\r\n    cursor: \"pointer\",\r\n    width: \"75px\"\r\n  }\r\n};\r\n\r\nclass KKTable extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      timestamp: \"\",\r\n      selectAll: false,\r\n      data: [],\r\n      checked: []\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSingleCheckboxChange = this.handleSingleCheckboxChange.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  handleChange = () => {\r\n    var selectAll = !this.state.selectAll;\r\n    this.setState({ selectAll: selectAll });\r\n    var checkedCopy = [];\r\n    this.state.data.forEach(function(e, index) {\r\n      checkedCopy.push(selectAll);\r\n    });\r\n    this.setState({\r\n      checked: checkedCopy\r\n    });\r\n  };\r\n\r\n  handleSingleCheckboxChange = index => {\r\n    console.log(index);\r\n\r\n    var checkedCopy = this.state.checked;\r\n    checkedCopy[index] = !this.state.checked[index];\r\n    if (checkedCopy[index] === false) {\r\n      this.setState({ selectAll: false });\r\n    }\r\n\r\n    this.setState({\r\n      checked: checkedCopy\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const data2 = [\r\n      { one: \"hi0\", two: \"two0\", three: \"three0\" },\r\n      { one: \"hi1\", two: \"two1\", three: \"three1\" },\r\n      { one: \"hi2\", two: \"two2\", three: \"three2\" },\r\n      { one: \"hi3\", two: \"two3\", three: \"three3\" },\r\n      { one: \"hi4\", two: \"two4\", three: \"three4\" },\r\n      { one: \"hi5\", two: \"two5\", three: \"three5\" },\r\n      { one: \"hi6\", two: \"two6\", three: \"three6\" },\r\n      { one: \"hi7\", two: \"two7\", three: \"three7\" },\r\n      { one: \"hi8\", two: \"two8\", three: \"three8\" }\r\n    ];\r\n\r\n    var checkedCopy = [];\r\n    var selectAll = this.state.selectAll;\r\n    data2.forEach(function(e, index) {\r\n      checkedCopy.push(selectAll);\r\n    });\r\n\r\n    this.setState({\r\n      data: data2,\r\n      checked: checkedCopy,\r\n      selectAll: selectAll\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <ReactTable\r\n            data={this.state.data}\r\n            filterable\r\n            defaultFilterMethod={(filter, row) =>\r\n              row[filter.id] !== undefined\r\n                ? String(row[filter.id])\r\n                    .toLowerCase()\r\n                    .includes(filter.value.toLowerCase())\r\n                : false\r\n            }\r\n            columns={[\r\n              {\r\n                Header: \"One\",\r\n                accessor: \"one\"\r\n              },\r\n              {\r\n                Header: (\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.selectAll}\r\n                  />\r\n                ),\r\n                Cell: row => (\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={this.state.checked[row.index]}\r\n                    checked={this.state.checked[row.index]}\r\n                    onChange={() => this.handleSingleCheckboxChange(row.index)}\r\n                  />\r\n                ),\r\n                sortable: false,\r\n                filterable: false\r\n              },\r\n              {\r\n                Header: \"Two\",\r\n                accessor: \"two\"\r\n              },\r\n              {\r\n                Header: \"Three\",\r\n                accessor: \"three\"\r\n              }\r\n            ]}\r\n            className=\"-striped \"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KKTable;"]},"metadata":{},"sourceType":"module"}
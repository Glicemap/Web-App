{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/GlicemapWeb/src/views/dashboard/Notifications/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { Catalogues } from \"./mock\";\nimport { Row, Col, Table, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = ({\n  id,\n  type,\n  handleClick,\n  isChecked\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    id: id,\n    type: type,\n    onChange: handleClick,\n    checked: isChecked\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Checkbox;\n\nconst Notifications = () => {\n  _s();\n\n  const [isCheckAll, setIsCheckAll] = useState(false);\n  const [isCheck, setIsCheck] = useState([]);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    setList(Catalogues);\n  }, [list]);\n\n  const handleSelectAll = e => {\n    setIsCheckAll(!isCheckAll);\n    setIsCheck(list.map(li => li.id));\n\n    if (isCheckAll) {\n      setIsCheck([]);\n    }\n  };\n\n  const handleClick = e => {\n    const {\n      id,\n      checked\n    } = e.target;\n    setIsCheck([...isCheck, id]);\n\n    if (!checked) {\n      setIsCheck(isCheck.filter(item => item !== id));\n    }\n  };\n\n  console.log(isCheck);\n  const catalog = list.map(({\n    id,\n    text\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"unread\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"col-xl-1\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          type: \"checkbox\",\n          id: id,\n          handleClick: handleClick,\n          isChecked: isCheck.includes(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"col-xl-11\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xl: 12,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              style: {\n                float: \"left\"\n              },\n              children: [\"Marcar como lido\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"feather icon-check\",\n                style: {\n                  margin: \"0\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 102\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              style: {\n                float: \"left\"\n              },\n              children: [\"Excluir\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"feather icon-trash\",\n                style: {\n                  margin: \"0\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 93\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"unread\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-xl-1\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      type: \"checkbox\",\n                      id: \"selectAll\",\n                      handleClick: handleSelectAll,\n                      isChecked: isCheckAll\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"col-xl-11\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Mensagem\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 67\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: 12,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: catalog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notifications, \"akCuq90uWJcqNNrz/YO0N5laQ2c=\");\n\n_c2 = Notifications;\nexport default Notifications;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkbox\");\n$RefreshReg$(_c2, \"Notifications\");","map":{"version":3,"sources":["/home/gustavo/GlicemapWeb/src/views/dashboard/Notifications/index.js"],"names":["React","useState","useEffect","ReactDOM","Catalogues","Row","Col","Table","Card","Button","Checkbox","id","type","handleClick","isChecked","Notifications","isCheckAll","setIsCheckAll","isCheck","setIsCheck","list","setList","handleSelectAll","e","map","li","checked","target","filter","item","console","log","catalog","text","includes","float","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { Catalogues } from \"./mock\";\r\nimport { Row, Col, Table, Card, Button } from 'react-bootstrap';\r\n\r\nconst Checkbox = ({ id, type, handleClick, isChecked }) => {\r\n    return (\r\n      <input\r\n        id={id}\r\n        type={type}\r\n        onChange={handleClick}\r\n        checked={isChecked}\r\n      />\r\n    );\r\n};\r\n\r\nconst Notifications = () => {\r\n    const [isCheckAll, setIsCheckAll] = useState(false);\r\n    const [isCheck, setIsCheck] = useState([]);\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setList(Catalogues);\r\n    }, [list]);\r\n\r\n    const handleSelectAll = e => {\r\n        setIsCheckAll(!isCheckAll);\r\n        setIsCheck(list.map(li => li.id));\r\n        if (isCheckAll) {\r\n        setIsCheck([]);\r\n        }\r\n    };\r\n\r\n    const handleClick = e => {\r\n        const { id, checked } = e.target;\r\n        setIsCheck([...isCheck, id]);\r\n        if (!checked) {\r\n        setIsCheck(isCheck.filter(item => item !== id));\r\n        }\r\n    };\r\n\r\n    console.log(isCheck);\r\n\r\n    const catalog = list.map(({ id, text }) => {\r\n        return (\r\n            <tr className=\"unread\">\r\n                <td className=\"col-xl-1\">\r\n                    <Checkbox \r\n                        type=\"checkbox\"\r\n                        id={id}\r\n                        handleClick={handleClick}\r\n                        isChecked={isCheck.includes(id)}\r\n                    />\r\n                </td>\r\n                <td className=\"col-xl-11\">\r\n                    {text}\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Row>\r\n                        <Col xl={12}>\r\n                            <Button variant=\"secondary\" style={{float: \"left\"}}>Marcar como lido{\" \"}<i className=\"feather icon-check\" style={{margin:\"0\"}}/></Button>\r\n                            <Button variant=\"secondary\" style={{float: \"left\"}}>Excluir{\" \"}<i className=\"feather icon-trash\" style={{margin:\"0\"}}/></Button>\r\n                        </Col>\r\n                        <Col xl={12}>\r\n                        <Table responsive>\r\n                                <tbody>\r\n                                    <tr className=\"unread\">\r\n                                        <td className=\"col-xl-1\">\r\n                                            <Checkbox \r\n                                                type=\"checkbox\"\r\n                                                id=\"selectAll\"\r\n                                                handleClick={handleSelectAll}\r\n                                                isChecked={isCheckAll}\r\n                                            />\r\n                                        </td>\r\n                                        <td className=\"col-xl-11\"><b>Mensagem</b></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col xl={12}>\r\n                            <Table responsive>\r\n                                <tbody>\r\n                                    {catalog}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n"]},"metadata":{},"sourceType":"module"}